[project]
name = "server"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aioinject==1.4.3",
    "asgi-correlation-id==4.3.4",
    "fastapi==0.116.0",
    "pydantic==2.11.7",
    "pydantic-settings[aws-secrets-manager]==2.10.1",
    "structlog==25.4.0",
    "beanie==1.30.0",
    "motor==3.7.1",
    "passlib[argon2]==1.7.4",
    "result==0.17.0",
    "authlib==1.6.0",
    "httpx==0.28.1",
    "itsdangerous==2.2.0",
    "aiosmtplib==4.0.1",
    "jinja2==3.1.6",
    "humanize==4.12.3",
    "email-validator==2.2.0",
    "aioboto3==15.0.0",
    "pymongo[aws]==4.9.2",
    "webauthn==2.6.0",
    "pyotp==2.9.0",
    "geopy==2.4.1",
    "nanoid==2.0.0",
    "tenacity==9.1.2",
    "sentry-sdk[fastapi,pymongo]==2.32.0",
    "python-jose[cryptography]==3.5.0",
    "redis[hiredis]==6.2.0",
    "aws-lambda-powertools[parser]==3.16.0",
    "structlog-sentry==2.2.1",
    "typing-extensions==4.14.1",
    "typing-inspection==0.4.1",
    "strawberry-graphql==0.278.0",
    "types-aiobotocore-textract==2.23.0",
    "tesserocr==2.8.0",
    "pillow==11.3.0",
    "pymupdf==1.26.3",
    "python-multipart==0.0.20",
    "types-aioboto3[essential]==15.0.0",
    "types-aiobotocore-ses==2.23.0",
    "types-aiobotocore-location==2.23.0",
    "types-aiobotocore-bedrock-runtime==2.23.0",
    "pydantic-ai-slim[bedrock]==0.4.3",
    "granian[pname,uvloop]==2.4.2",
]


[tool.uv]
dev-dependencies = [
    "types-passlib==1.7.7.20250602",
    "types-authlib==1.6.0.20250708",
    "types-python-jose==3.5.0.20250531",
    "ruff==0.12.2",
    "pyright==1.1.403",
    "better-exceptions==0.3.3",
    "strawberry-graphql[cli]==0.278.0",
    "watchfiles==1.1.0",
    "granian[pname,reload,uvloop]==2.4.2",
]

[tool.pyright]
include = ["app", "tests"]
exclude = ["^.venv/"]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"
reportCallInDefaultInitializer = "error"
reportImplicitOptional = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryCast = "error"
reportUnusedImport = "error"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportUnreachable = "error"


[tool.ruff]
src = ["app", "tests"]
lint.fixable = ["F", "E", "W", "I", "COM", "UP", "RUF"]
lint.unfixable = [
    "F841", # variable  is assigned to but never used
]
lint.select = ["ALL"]
lint.ignore = [
    "E501",    # line length
    "D10",     # disable mandatory docstrings
    "D203",    # one-blank-line-before-class
    "D212",    # multi-line-summary-first-line
    "PD",      # pandas-vet
    "PLR0913", # too many arguments
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
    "COM812",
    "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "S105", "S106", "E712"]
"migrations/*" = ["INP001"]
"migrations/versions/*" = ["D400", "D415"]


[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"starlette.status".msg = "Use http.HTTPStatus instead."
"fastapi.status".msg = "Use http.HTTPStatus instead."
"httpx.codes".msg = "Use http.HTTPStatus instead."
