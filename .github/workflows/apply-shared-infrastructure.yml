name: Plan and Apply Shared Terraform Changes

on:
  push:
    branches:
      - main
      - staging
    paths:
      - "infrastructure/shared/**"
      - "infrastructure/modules/**"
      - ".github/workflows/apply-shared-infrastructure.yml"
  pull_request:
    branches:
      - main
      - staging
    paths:
      - "infrastructure/shared/**"
      - "infrastructure/modules/**"
      - ".github/workflows/apply-shared-infrastructure.yml"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PA_TOKEN_GITHUB }}
  MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
  MONGODB_ATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  REDISCLOUD_SECRET_KEY: ${{ secrets.REDISCLOUD_SECRET_KEY }}
  REDISCLOUD_ACCESS_KEY: ${{ secrets.REDISCLOUD_ACCESS_KEY }}
  TF_VAR_cloudflare_account_id: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
  TF_VAR_google_oauth_client_id: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  TF_VAR_google_oauth_client_secret: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  TF_VAR_mongodb_atlas_org_id: ${{ vars.MONGODB_ATLAS_ORG_ID }}
  TF_VAR_whatsapp_access_token: ${{ secrets.WHATSAPP_ACCESS_TOKEN }}
  TF_VAR_whatsapp_phone_number_id: ${{ vars.WHATSAPP_PHONE_NUMBER_ID }}
  TF_VAR_two_factor_in_api_key: ${{ secrets.TWO_FACTOR_IN_API_KEY }}
  TF_VAR_posthog_api_key: ${{ secrets.POSTHOG_API_KEY }}
  TF_VAR_posthog_api_host: ${{ vars.POSTHOG_API_HOST }}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  terraform-shared:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Terraform Init
        id: init
        working-directory: ./infrastructure/shared
        run: terraform init -backend-config="bucket=${{ vars.TERRAFORM_AWS_BACKEND_BUCKET_NAME }}" -backend-config="region=${{ vars.TERRAFORM_AWS_REGION }}"

      - name: Terraform Format
        id: fmt
        working-directory: ./infrastructure/shared
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        working-directory: ./infrastructure/shared
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        working-directory: ./infrastructure/shared
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\
