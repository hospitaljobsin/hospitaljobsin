name: Deploy Worker

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name == 'production' && 'production' || 'staging' }}  # Ensures only one run of this workflow at a time
  cancel-in-progress: false      # Waits instead of cancelling previous runs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'production' && 'production' || 'staging' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEPLOYMENT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOYMENT_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          target: lambda-handler
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.AWS_WORKER_IMAGE_NAME }}:${{ github.ref_name == 'production' && 'production' || 'staging' }}-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.AWS_WORKER_IMAGE_NAME }}:${{ github.ref_name == 'production' && 'production' || 'staging' }}-latest
          build-args: |
            AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }}
            AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Update AWS Lambda function
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: ${{ vars.AWS_WORKER_IMAGE_NAME }}
          IMAGE_TAG: ${{ github.ref_name == 'production' && 'production' || 'staging' }}-${{ github.sha }}
        run: aws lambda update-function-code --function-name ${{ vars.AWS_WORKER_FUNCTION_NAME }} --image-uri $REGISTRY/$IMAGE_NAME:$IMAGE_TAG



# TODO: wait for relevant tests to pass before building and pushing
